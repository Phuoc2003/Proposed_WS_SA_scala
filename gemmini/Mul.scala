package gemmini

import chisel3._
import chisel3.util._
import chisel3.experimental._

class Mul() extends RawModule {
  val a = IO(Input(SInt(8.W)))
  val b = IO(Input(SInt(8.W)))
  val prod = IO(Output(SInt(16.W)))
  val signA = Wire(Bool()) 
  val signB = Wire(Bool()) 
  val signResult = Wire(Bool()) 
  signA := a(7)
  signB := b(7)
  signResult := signA^signB
//   val absA = Wire(Vec(8, Bool())) 
//   val absB = Wire(Vec(8, Bool())) 
//   absA := Mux(signA, (( ~a)+"b1".U(1.W)).asTypeOf(Vec(8, Bool())), a.asTypeOf(Vec(8, Bool())))
//   absB := Mux(signB, (( ~b)+"b1".U(1.W)).asTypeOf(Vec(8, Bool())), b.asTypeOf(Vec(8, Bool())))

  val absA = Wire(SInt(8.W))
  val absB = Wire(SInt(8.W))
  absA := Mux(signA, (~a).asSInt + 1.S, a)
  absB := Mux(signB, (~b).asSInt + 1.S, b)


  val unsignedResult = Wire(SInt(16.W))

  // Declare internal signals
  val s00 = Wire(Bool()) 
  val s01 = Wire(Bool()) 
  val s02 = Wire(Bool()) 
  val s03 = Wire(Bool()) 
  val s04 = Wire(Bool()) 
  val s05 = Wire(Bool()) 
  val s06 = Wire(Bool()) 
  val s07 = Wire(Bool()) 
  val s10 = Wire(Bool()) 
  val s11 = Wire(Bool()) 
  val s12 = Wire(Bool()) 
  val s13 = Wire(Bool()) 
  val s14 = Wire(Bool()) 
  val s15 = Wire(Bool()) 
  val s16 = Wire(Bool()) 
  val s17 = Wire(Bool()) 
  val s20 = Wire(Bool()) 
  val s21 = Wire(Bool()) 
  val s22 = Wire(Bool()) 
  val s23 = Wire(Bool()) 
  val s24 = Wire(Bool()) 
  val s25 = Wire(Bool()) 
  val s26 = Wire(Bool()) 
  val s27 = Wire(Bool()) 
  val s30 = Wire(Bool()) 
  val s31 = Wire(Bool()) 
  val s32 = Wire(Bool()) 
  val s33 = Wire(Bool()) 
  val s34 = Wire(Bool()) 
  val s35 = Wire(Bool()) 
  val s36 = Wire(Bool()) 
  val s37 = Wire(Bool()) 
  val s40 = Wire(Bool()) 
  val s41 = Wire(Bool()) 
  val s42 = Wire(Bool()) 
  val s43 = Wire(Bool()) 
  val s44 = Wire(Bool()) 
  val s45 = Wire(Bool()) 
  val s46 = Wire(Bool()) 
  val s47 = Wire(Bool()) 
  val s50 = Wire(Bool()) 
  val s51 = Wire(Bool()) 
  val s52 = Wire(Bool()) 
  val s53 = Wire(Bool()) 
  val s54 = Wire(Bool()) 
  val s55 = Wire(Bool()) 
  val s56 = Wire(Bool()) 
  val s57 = Wire(Bool()) 
  val s60 = Wire(Bool()) 
  val s61 = Wire(Bool()) 
  val s62 = Wire(Bool()) 
  val s63 = Wire(Bool()) 
  val s64 = Wire(Bool()) 
  val s65 = Wire(Bool()) 
  val s66 = Wire(Bool()) 
  val s67 = Wire(Bool()) 
  val s70 = Wire(Bool()) 
  val s71 = Wire(Bool()) 
  val s72 = Wire(Bool()) 
  val s73 = Wire(Bool()) 
  val s74 = Wire(Bool()) 
  val s75 = Wire(Bool()) 
  val s76 = Wire(Bool()) 
  val s77 = Wire(Bool()) 
  val k01 = Wire(Bool()) 
  val k02 = Wire(Bool()) 
  val k03 = Wire(Bool()) 
  val k04 = Wire(Bool()) 
  val k05 = Wire(Bool()) 
  val k06 = Wire(Bool()) 
  val k07 = Wire(Bool()) 
  val k08 = Wire(Bool()) 
  val k09 = Wire(Bool()) 
  val k10 = Wire(Bool()) 
  val k11 = Wire(Bool()) 
  val k12 = Wire(Bool()) 
  val k13 = Wire(Bool()) 
  val k14 = Wire(Bool()) 
  val k15 = Wire(Bool()) 
  val k16 = Wire(Bool()) 
  val k17 = Wire(Bool()) 
  val k18 = Wire(Bool()) 
  val k19 = Wire(Bool()) 
  val k20 = Wire(Bool()) 
  val k21 = Wire(Bool()) 
  val k22 = Wire(Bool()) 
  val k23 = Wire(Bool()) 
  val k24 = Wire(Bool()) 
  val k25 = Wire(Bool()) 
  val k26 = Wire(Bool()) 
  val k27 = Wire(Bool()) 
  val k28 = Wire(Bool()) 
  val k29 = Wire(Bool()) 
  val k30 = Wire(Bool()) 
  val k31 = Wire(Bool()) 
  val k32 = Wire(Bool()) 
  val k33 = Wire(Bool()) 
  val k34 = Wire(Bool()) 
  val k35 = Wire(Bool()) 
  val k36 = Wire(Bool()) 
  val k37 = Wire(Bool()) 
  val k38 = Wire(Bool()) 
  val k39 = Wire(Bool()) 
  val k40 = Wire(Bool()) 
  val k41 = Wire(Bool()) 
  val k42 = Wire(Bool()) 
  val k43 = Wire(Bool()) 
  val k44 = Wire(Bool()) 
  val k45 = Wire(Bool()) 
  val k46 = Wire(Bool()) 
  val k47 = Wire(Bool()) 
  val k48 = Wire(Bool()) 
  val k49 = Wire(Bool()) 
  val k50 = Wire(Bool()) 
  val k51 = Wire(Bool()) 
  val k52 = Wire(Bool()) 
  val k53 = Wire(Bool()) 
  val k54 = Wire(Bool()) 
  val k55 = Wire(Bool()) 
  val k56 = Wire(Bool()) 
  val k57 = Wire(Bool()) 
  val k58 = Wire(Bool()) 
  val k59 = Wire(Bool()) 
  val k60 = Wire(Bool()) 
  val k61 = Wire(Bool()) 
  val k62 = Wire(Bool()) 
  val k63 = Wire(Bool()) 
  val k64 = Wire(Bool()) 
  val k65 = Wire(Bool()) 
  val k66 = Wire(Bool()) 
  val k67 = Wire(Bool()) 
  val k68 = Wire(Bool()) 
  val c01 = Wire(Bool()) 
  val c02 = Wire(Bool()) 
  val c03 = Wire(Bool()) 
  val c04 = Wire(Bool()) 
  val c05 = Wire(Bool()) 
  val c06 = Wire(Bool()) 
  val c07 = Wire(Bool()) 
  val c08 = Wire(Bool()) 
  val c09 = Wire(Bool()) 
  val c10 = Wire(Bool()) 
  val c11 = Wire(Bool()) 
  val c12 = Wire(Bool()) 
  val c13 = Wire(Bool()) 
  val c14 = Wire(Bool()) 
  val c15 = Wire(Bool()) 
  val c16 = Wire(Bool()) 
  val c17 = Wire(Bool()) 
  val c18 = Wire(Bool()) 
  val c19 = Wire(Bool()) 
  val c20 = Wire(Bool()) 
  val c21 = Wire(Bool()) 
  val c22 = Wire(Bool()) 
  val c23 = Wire(Bool()) 
  val c24 = Wire(Bool()) 
  val c25 = Wire(Bool()) 
  val c26 = Wire(Bool()) 
  val c27 = Wire(Bool()) 
  val c28 = Wire(Bool()) 
  val c29 = Wire(Bool()) 
  val c30 = Wire(Bool()) 
  val c31 = Wire(Bool()) 
  val c32 = Wire(Bool()) 
  val c33 = Wire(Bool()) 
  val c34 = Wire(Bool()) 
  val c35 = Wire(Bool()) 
  val c36 = Wire(Bool()) 
  val c37 = Wire(Bool()) 
  val c38 = Wire(Bool()) 
  val c39 = Wire(Bool()) 
  val c40 = Wire(Bool()) 
  val c41 = Wire(Bool()) 
  val c42 = Wire(Bool()) 
  val c43 = Wire(Bool()) 
  val c44 = Wire(Bool()) 
  val c45 = Wire(Bool()) 
  val c46 = Wire(Bool()) 
  val c47 = Wire(Bool()) 
  val c48 = Wire(Bool()) 
  val c49 = Wire(Bool()) 
  val c50 = Wire(Bool()) 
  val c51 = Wire(Bool()) 
  val c52 = Wire(Bool()) 
  val c53 = Wire(Bool()) 
  val c54 = Wire(Bool()) 
  val c55 = Wire(Bool()) 
  val c56 = Wire(Bool()) 
  val c57 = Wire(Bool()) 
  val c58 = Wire(Bool()) 
  val c59 = Wire(Bool()) 
  val c60 = Wire(Bool()) 
  val c61 = Wire(Bool()) 
  val c62 = Wire(Bool()) 
  val c63 = Wire(Bool()) 
  val c64 = Wire(Bool()) 
  val c65 = Wire(Bool()) 
  val c66 = Wire(Bool()) 
  val c67 = Wire(Bool()) 
  val c68 = Wire(Bool()) 

  // Partial products generation with absolute values
  s00 := absA(0)&absB(0)
  s10 := absA(1)&absB(0)
  s20 := absA(2)&absB(0)
  s30 := absA(3)&absB(0)
  s40 := absA(4)&absB(0)
  s50 := absA(5)&absB(0)
  s60 := absA(6)&absB(0)
  s70 := absA(7)&absB(0)
  s01 := absA(0)&absB(1)
  s11 := absA(1)&absB(1)
  s21 := absA(2)&absB(1)
  s31 := absA(3)&absB(1)
  s41 := absA(4)&absB(1)
  s51 := absA(5)&absB(1)
  s61 := absA(6)&absB(1)
  s71 := absA(7)&absB(1)
  s02 := absA(0)&absB(2)
  s12 := absA(1)&absB(2)
  s22 := absA(2)&absB(2)
  s32 := absA(3)&absB(2)
  s42 := absA(4)&absB(2)
  s52 := absA(5)&absB(2)
  s62 := absA(6)&absB(2)
  s72 := absA(7)&absB(2)
  s03 := absA(0)&absB(3)
  s13 := absA(1)&absB(3)
  s23 := absA(2)&absB(3)
  s33 := absA(3)&absB(3)
  s43 := absA(4)&absB(3)
  s53 := absA(5)&absB(3)
  s63 := absA(6)&absB(3)
  s73 := absA(7)&absB(3)
  s04 := absA(0)&absB(4)
  s14 := absA(1)&absB(4)
  s24 := absA(2)&absB(4)
  s34 := absA(3)&absB(4)
  s44 := absA(4)&absB(4)
  s54 := absA(5)&absB(4)
  s64 := absA(6)&absB(4)
  s74 := absA(7)&absB(4)
  s05 := absA(0)&absB(5)
  s15 := absA(1)&absB(5)
  s25 := absA(2)&absB(5)
  s35 := absA(3)&absB(5)
  s45 := absA(4)&absB(5)
  s55 := absA(5)&absB(5)
  s65 := absA(6)&absB(5)
  s75 := absA(7)&absB(5)
  s06 := absA(0)&absB(6)
  s16 := absA(1)&absB(6)
  s26 := absA(2)&absB(6)
  s36 := absA(3)&absB(6)
  s46 := absA(4)&absB(6)
  s56 := absA(5)&absB(6)
  s66 := absA(6)&absB(6)
  s76 := absA(7)&absB(6)
  s07 := absA(0)&absB(7)
  s17 := absA(1)&absB(7)
  s27 := absA(2)&absB(7)
  s37 := absA(3)&absB(7)
  s47 := absA(4)&absB(7)
  s57 := absA(5)&absB(7)
  s67 := absA(6)&absB(7)
  s77 := absA(7)&absB(7)

  // Stage zero
  val ha00 = Module(new HalfAdder)
  ha00.a := s01
  ha00.b := s10
  k01 := ha00.sum
  c01 := ha00.cout
  val fa00 = Module(new FullAdder)
  fa00.a := s20
  fa00.b := s02
  fa00.c := s11
  k02 := fa00.sum
  c02 := fa00.cout
  val fa01 = Module(new FullAdder)
  fa01.a := s30
  fa01.b := s21
  fa01.c := s12
  k03 := fa01.sum
  c03 := fa01.cout
  val fa02 = Module(new FullAdder)
  fa02.a := s40
  fa02.b := s31
  fa02.c := s22
  k04 := fa02.sum
  c04 := fa02.cout
  val ha01 = Module(new HalfAdder)
  ha01.a := s13
  ha01.b := s04
  k05 := ha01.sum
  c05 := ha01.cout
  val fa03 = Module(new FullAdder)
  fa03.a := s50
  fa03.b := s41
  fa03.c := s32
  k06 := fa03.sum
  c06 := fa03.cout
  val fa04 = Module(new FullAdder)
  fa04.a := s23
  fa04.b := s14
  fa04.c := s05
  k07 := fa04.sum
  c07 := fa04.cout
  val fa05 = Module(new FullAdder)
  fa05.a := s60
  fa05.b := s51
  fa05.c := s42
  k08 := fa05.sum
  c08 := fa05.cout
  val fa06 = Module(new FullAdder)
  fa06.a := s33
  fa06.b := s24
  fa06.c := s15
  k09 := fa06.sum
  c09 := fa06.cout
  val fa07 = Module(new FullAdder)
  fa07.a := s70
  fa07.b := s61
  fa07.c := s52
  k10 := fa07.sum
  c10 := fa07.cout
  val fa08 = Module(new FullAdder)
  fa08.a := s43
  fa08.b := s34
  fa08.c := s25
  k11 := fa08.sum
  c11 := fa08.cout
  val ha02 = Module(new HalfAdder)
  ha02.a := s16
  ha02.b := s07
  k12 := ha02.sum
  c12 := ha02.cout
  val fa09 = Module(new FullAdder)
  fa09.a := s71
  fa09.b := s62
  fa09.c := s53
  k13 := fa09.sum
  c13 := fa09.cout
  val fa90 = Module(new FullAdder)
  fa90.a := s44
  fa90.b := s35
  fa90.c := s26
  k14 := fa90.sum
  c14 := fa90.cout
  val fa31 = Module(new FullAdder)
  fa31.a := s72
  fa31.b := s63
  fa31.c := s54
  k15 := fa31.sum
  c15 := fa31.cout
  val fa32 = Module(new FullAdder)
  fa32.a := s45
  fa32.b := s36
  fa32.c := s27
  k16 := fa32.sum
  c16 := fa32.cout
  val fa33 = Module(new FullAdder)
  fa33.a := s73
  fa33.b := s64
  fa33.c := s55
  k17 := fa33.sum
  c17 := fa33.cout
  val ha03 = Module(new HalfAdder)
  ha03.a := s46
  ha03.b := s37
  k18 := ha03.sum
  c18 := ha03.cout
  val fa34 = Module(new FullAdder)
  fa34.a := s74
  fa34.b := s65
  fa34.c := s56
  k19 := fa34.sum
  c19 := fa34.cout
  val fa35 = Module(new FullAdder)
  fa35.a := s75
  fa35.b := s66
  fa35.c := s57
  k20 := fa35.sum
  c20 := fa35.cout
  val ha04 = Module(new HalfAdder)
  ha04.a := s76
  ha04.b := s67
  k21 := ha04.sum
  c21 := ha04.cout

  // Stage one
  val ha10 = Module(new HalfAdder)
  ha10.a := k02
  ha10.b := c01
  k22 := ha10.sum
  c22 := ha10.cout
  val fa10 = Module(new FullAdder)
  fa10.a := s03
  fa10.b := c02
  fa10.c := k03
  k23 := fa10.sum
  c23 := fa10.cout
  val fa11 = Module(new FullAdder)
  fa11.a := k04
  fa11.b := k05
  fa11.c := c03
  k24 := fa11.sum
  c24 := fa11.cout
  val fa12 = Module(new FullAdder)
  fa12.a := k06
  fa12.b := k07
  fa12.c := c04
  k25 := fa12.sum
  c25 := fa12.cout
  val fa13 = Module(new FullAdder)
  fa13.a := k08
  fa13.b := k09
  fa13.c := s06
  k26 := fa13.sum
  c26 := fa13.cout
  val ha11 = Module(new HalfAdder)
  ha11.a := c06
  ha11.b := c07
  k27 := ha11.sum
  c27 := ha11.cout
  val fa14 = Module(new FullAdder)
  fa14.a := k10
  fa14.b := k11
  fa14.c := k12
  k28 := fa14.sum
  c28 := fa14.cout
  val ha12 = Module(new HalfAdder)
  ha12.a := c08
  ha12.b := c09
  k29 := ha12.sum
  c29 := ha12.cout
  val fa15 = Module(new FullAdder)
  fa15.a := k13
  fa15.b := k14
  fa15.c := s17
  k30 := fa15.sum
  c30 := fa15.cout
  val fa16 = Module(new FullAdder)
  fa16.a := c10
  fa16.b := c11
  fa16.c := c12
  k31 := fa16.sum
  c31 := fa16.cout
  val fa17 = Module(new FullAdder)
  fa17.a := k15
  fa17.b := k16
  fa17.c := c13
  k32 := fa17.sum
  c32 := fa17.cout
  val fa18 = Module(new FullAdder)
  fa18.a := k17
  fa18.b := k18
  fa18.c := c15
  k33 := fa18.sum
  c33 := fa18.cout
  val fa19 = Module(new FullAdder)
  fa19.a := k19
  fa19.b := c17
  fa19.c := c18
  k34 := fa19.sum
  c34 := fa19.cout
  val ha13 = Module(new HalfAdder)
  ha13.a := k20
  ha13.b := c19
  k35 := ha13.sum
  c35 := ha13.cout
  val ha14 = Module(new HalfAdder)
  ha14.a := k21
  ha14.b := c20
  k36 := ha14.sum
  c36 := ha14.cout

  // Stage two
  val ha40 = Module(new HalfAdder)
  ha40.a := k23
  ha40.b := c22
  k37 := ha40.sum
  c37 := ha40.cout
  val ha41 = Module(new HalfAdder)
  ha41.a := c23
  ha41.b := k24
  k38 := ha41.sum
  c38 := ha41.cout
  val fa40 = Module(new FullAdder)
  fa40.a := c24
  fa40.b := k25
  fa40.c := c05
  k39 := fa40.sum
  c39 := fa40.cout
  val fa41 = Module(new FullAdder)
  fa41.a := c25
  fa41.b := k26
  fa41.c := k27
  k40 := fa41.sum
  c40 := fa41.cout
  val fa42 = Module(new FullAdder)
  fa42.a := c26
  fa42.b := c27
  fa42.c := k28
  k41 := fa42.sum
  c41 := fa42.cout
  val fa43 = Module(new FullAdder)
  fa43.a := c28
  fa43.b := c29
  fa43.c := k30
  k42 := fa43.sum
  c42 := fa43.cout
  val fa44 = Module(new FullAdder)
  fa44.a := c30
  fa44.b := c31
  fa44.c := k32
  k43 := fa44.sum
  c43 := fa44.cout
  val fa45 = Module(new FullAdder)
  fa45.a := c32
  fa45.b := c16
  fa45.c := k33
  k44 := fa45.sum
  c44 := fa45.cout
  val fa46 = Module(new FullAdder)
  fa46.a := c33
  fa46.b := s47
  fa46.c := k34
  k45 := fa46.sum
  c45 := fa46.cout
  val ha42 = Module(new HalfAdder)
  ha42.a := k35
  ha42.b := c34
  k46 := ha42.sum
  c46 := ha42.cout
  val ha43 = Module(new HalfAdder)
  ha43.a := c35
  ha43.b := k36
  k47 := ha43.sum
  c47 := ha43.cout
  val fa47 = Module(new FullAdder)
  fa47.a := s77
  fa47.b := c21
  fa47.c := c36
  k48 := fa47.sum
  c48 := fa47.cout

  // Stage three
  val ha50 = Module(new HalfAdder)
  ha50.a := c37
  ha50.b := k38
  k49 := ha50.sum
  c49 := ha50.cout
  val fa50 = Module(new FullAdder)
  fa50.a := k39
  fa50.b := c38
  fa50.c := c49
  k50 := fa50.sum
  c50 := fa50.cout
  val fa51 = Module(new FullAdder)
  fa51.a := k40
  fa51.b := c39
  fa51.c := c50
  k51 := fa51.sum
  c51 := fa51.cout
  val fa52 = Module(new FullAdder)
  fa52.a := c40
  fa52.b := k41
  fa52.c := k29
  k52 := fa52.sum
  c52 := fa52.cout
  val fa53 = Module(new FullAdder)
  fa53.a := c41
  fa53.b := k31
  fa53.c := k42
  k53 := fa53.sum
  c53 := fa53.cout
  val fa54 = Module(new FullAdder)
  fa54.a := c14
  fa54.b := c42
  fa54.c := k43
  k54 := fa54.sum
  c54 := fa54.cout
  val fa55 = Module(new FullAdder)
  fa55.a := k44
  fa55.b := c43
  fa55.c := c54
  k55 := fa55.sum
  c55 := fa55.cout
  val fa56 = Module(new FullAdder)
  fa56.a := c44
  fa56.b := k45
  fa56.c := c55
  k56 := fa56.sum
  c56 := fa56.cout
  val fa57 = Module(new FullAdder)
  fa57.a := k46
  fa57.b := c45
  fa57.c := c56
  k57 := fa57.sum
  c57 := fa57.cout
  val fa58 = Module(new FullAdder)
  fa58.a := c46
  fa58.b := k47
  fa58.c := c57
  k58 := fa58.sum
  c58 := fa58.cout
  val fa59 = Module(new FullAdder)
  fa59.a := k48
  fa59.b := c47
  fa59.c := c58
  k59 := fa59.sum
  c59 := fa59.cout

  // Stage four
  val ha70 = Module(new HalfAdder)
  ha70.a := c51
  ha70.b := k52
  k60 := ha70.sum
  c60 := ha70.cout
  val fa70 = Module(new FullAdder)
  fa70.a := c52
  fa70.b := k53
  fa70.c := c60
  k61 := fa70.sum
  c61 := fa70.cout
  val fa71 = Module(new FullAdder)
  fa71.a := c53
  fa71.b := k54
  fa71.c := c61
  k62 := fa71.sum
  c62 := fa71.cout
  val ha71 = Module(new HalfAdder)
  ha71.a := k55
  ha71.b := c62
  k63 := ha71.sum
  c63 := ha71.cout
  val ha72 = Module(new HalfAdder)
  ha72.a := k56
  ha72.b := c63
  k64 := ha72.sum
  c64 := ha72.cout
  val ha73 = Module(new HalfAdder)
  ha73.a := k57
  ha73.b := c64
  k65 := ha73.sum
  c65 := ha73.cout
  val ha74 = Module(new HalfAdder)
  ha74.a := k58
  ha74.b := c65
  k66 := ha74.sum
  c66 := ha74.cout
  val ha75 = Module(new HalfAdder)
  ha75.a := k59
  ha75.b := c66
  k67 := ha75.sum
  c67 := ha75.cout
  val fa81 = Module(new FullAdder)
  fa81.a := c48
  fa81.b := c59
  fa81.c := c67
  k68 := fa81.sum
  c68 := fa81.cout
  // unsignedResult(0) := s00
  // unsignedResult(1) := k01
  // unsignedResult(2) := k22
  // unsignedResult(3) := k37
  // unsignedResult(4) := k49
  // unsignedResult(5) := k50
  // unsignedResult(6) := k51
  // unsignedResult(7) := k60
  // unsignedResult(8) := k61
  // unsignedResult(9) := k62
  // unsignedResult(10) := k63
  // unsignedResult(11) := k64
  // unsignedResult(12) := k65
  // unsignedResult(13) := k66
  // unsignedResult(14) := k67
  // unsignedResult(15) := k68|c68

//   prod := Mux(signResult, (( ~unsignedResult.asSInt)+"b1".U(1.W)), unsignedResult.asSInt)
unsignedResult := Cat(
    k68 | c68,  // bit 15
    k67,        // bit 14  
    k66,        // bit 13
    k65,        // bit 12
    k64,        // bit 11
    k63,        // bit 10
    k62,        // bit 9
    k61,        // bit 8
    k60,        // bit 7
    k51,        // bit 6
    k50,        // bit 5
    k49,        // bit 4
    k37,        // bit 3
    k22,        // bit 2
    k01,        // bit 1
    s00         // bit 0
  ).asSInt
  // val unsignedResultSInt = unsignedResult.asSInt
  prod := Mux(signResult, ~unsignedResult + 1.S, unsignedResult)
}